---
apiVersion: v1
kind: Namespace
metadata:
  name: #{Namespace}#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{Application}#
  namespace: #{Namespace}#
spec:
  replicas: #{Replicas}#
  selector:
    matchLabels:
      app: #{Application}#
  template:
    metadata:
      labels:
        app: #{Application}#
        tags.datadoghq.com/env: #{HOST_ENV}#
        tags.datadoghq.com/service: #{Application}#
    spec:
      volumes:
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
      - name: #{Application}#
        image: #{Image}#:#{Tag}#
        resources:
          requests:
            memory: #{Requests.Memory}#
            cpu: #{Requests.CPU}#
          limits:
            memory: #{Limits.Memory}#
            cpu: #{Limits.CPU}#
        volumeMounts:
          - name: apmsocketpath
            mountPath: /var/run/datadog
        ports:
        - containerPort: 3000
        env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        startupProbe:
          httpGet:
            path: /health.json
            port: 3000
          failureThreshold: 120
        livenessProbe:
          httpGet:
            path: /health.json
            port: 3000
          initialDelaySeconds: 0
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health.json
            port: 3000
          failureThreshold: 3
          initialDelaySeconds: 0
      imagePullSecrets:
        - name: #{DockerHubSecret}#
---
apiVersion: v1
kind: Service
metadata:
  name: #{Application}#
  namespace: #{Namespace}#
spec:
  type: ClusterIP
  ports:
  - port: 3000
  selector:
    app: #{Application}#
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #{Application}#
  namespace: #{Namespace}#
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: #{Host-1}#
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: #{Application}#
            port:
              number: 3000
  - host: #{Host-2}#
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: #{Application}#
            port:
              number: 3000